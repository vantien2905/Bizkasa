//
//  ListRoomPresenter.swift
//  Bizkasa
//
//  Created DINH VAN TIEN on 2/23/20.
//  Copyright Â© 2020 DINH VAN TIEN. All rights reserved.
//
//  Template generated by Tien Dinh
//

import UIKit

class ListRoomPresenter: ListRoomPresenterProtocol {
    func changeStatusRoom(roomID: Int, status: String) {
        interactor?.changeStatusRoom(roomID: roomID, status: status)
    }
    
    func getRoomsByClass() {
        interactor?.getRoomsByClass()
    }


    weak private var view: ListRoomViewProtocol?
    var interactor: ListRoomInteractorInputProtocol?
    private let router: ListRoomWireframeProtocol

    init(interface: ListRoomViewProtocol, interactor: ListRoomInteractorInputProtocol?, router: ListRoomWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

}

extension ListRoomPresenter: ListRoomInteractorOutputProtocol {
    func didChangeStatusRoom(result: BaseResponse?, error: APIError?) {
        view?.didChangeStatusRoom(result: result, error: error)
    }
    
    func didGetRoomsByClass(result: [RoomTypeEntity]?, error: APIError?) {
        view?.didGetRoomsByClass(result: result, error: error)
    }

	
}
