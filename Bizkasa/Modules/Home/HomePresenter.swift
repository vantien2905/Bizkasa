//
//  HomePresenter.swift
//  CodeBase
//
//  Created DINH VAN TIEN on 2/12/20.
//  Copyright Â© 2020 DINH VAN TIEN. All rights reserved.
//
//  Template generated by Tien Dinh
//

import UIKit

class HomePresenter: HomePresenterProtocol {
    func reportRevenue(shiftID: Int) {
        interactor?.reportRevenue(shiftID: shiftID)
    }

    func getReceiptReport(period: Int) {
        interactor?.getReceiptReport(period: period)
    }


    weak private var view: HomeViewProtocol?
    var interactor: HomeInteractorInputProtocol?
    private let router: HomeWireframeProtocol

    init(interface: HomeViewProtocol, interactor: HomeInteractorInputProtocol?, router: HomeWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

}

extension HomePresenter: HomeInteractorOutputProtocol {
    func didReportRevenue(result: RevenueEntity?, error: APIError?) {
        view?.didReportRevenue(result: result, error: error)
    }

    func didGetReceiptReport(result: [ReceipReportEntity]?, error: APIError?) {
        view?.didGetReceiptReport(result: result, error: error)
    }

	
}
