//
//  PaymentPresenter.swift
//  Bizkasa
//
//  Created Tien Dinh on 7/7/20.
//  Copyright Â© 2020 DINH VAN TIEN. All rights reserved.
//
//  Template generated by Tien Dinh
//

import UIKit

class PaymentPresenter: PaymentPresenterProtocol {
    
    func insertOrUpdateInvoice(param: InsertInvoiceParam) {
        interactor?.insertOrUpdateInvoice(param: param)
    }
    
    func getInvoiceByPayment(param: GetInvoiceParam) {
        interactor?.getInvoiceByPayment(param: param)
    }
    

    weak private var view: PaymentViewProtocol?
    var interactor: PaymentInteractorInputProtocol?
    private let router: PaymentWireframeProtocol

    init(interface: PaymentViewProtocol, interactor: PaymentInteractorInputProtocol?, router: PaymentWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

}

extension PaymentPresenter: PaymentInteractorOutputProtocol {
    func didGetInvoiceByPayment(result: PaymentEntityResponse?, error: APIError?) {
        view?.didGetInvoiceByPayment(result: result, error: error)
    }
    
	func didInsertOrUpdateInvoice(result: BaseResponse?, error: APIError?) {
        view?.didInsertOrUpdateInvoice(result: result, error: error)
    }
}
