//
//  ServiceManagementPresenter.swift
//  Bizkasa
//
//  Created Tien Dinh on 8/23/20.
//  Copyright Â© 2020 DINH VAN TIEN. All rights reserved.
//
//  Template generated by Tien Dinh
//

import UIKit

class ServiceManagementPresenter: ServiceManagementPresenterProtocol {
    func deleteWedget(listID: [Int]) {
        interactor?.deleteWedget(listID: listID)
    }
    
    func getWidget(type: Int) {
        interactor?.getWidget(type: type)
    }

    weak private var view: ServiceManagementViewProtocol?
    var interactor: ServiceManagementInteractorInputProtocol?
    private let router: ServiceManagementWireframeProtocol

    init(interface: ServiceManagementViewProtocol,
         interactor: ServiceManagementInteractorInputProtocol?,
         router: ServiceManagementWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

}

extension ServiceManagementPresenter: ServiceManagementInteractorOutputProtocol {
    func didDeleteWedget(result: BaseResponse?, error: APIError?) {
        view?.didDeleteWedget(result: result, error: error)
    }
    
	func didGetWidget(result: [WidgetTypeEntity]?, error: APIError?) {
        view?.didGetWidget(result: result, error: error)
    }
}
