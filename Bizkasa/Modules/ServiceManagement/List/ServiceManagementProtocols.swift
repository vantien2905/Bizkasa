//
//  ServiceManagementProtocols.swift
//  Bizkasa
//
//  Created Tien Dinh on 8/23/20.
//  Copyright Â© 2020 DINH VAN TIEN. All rights reserved.
//
//  Template generated by Tien Dinh

import Foundation

//MARK: Wireframe -
protocol ServiceManagementWireframeProtocol: class {

}
//MARK: Presenter -
protocol ServiceManagementPresenterProtocol: class {

    var interactor: ServiceManagementInteractorInputProtocol? { get set }
    
    func getWidget(type: Int)
    func deleteWedget(listID: [Int])
}

//MARK: Interactor -
protocol ServiceManagementInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func didGetWidget(result: [WidgetTypeEntity]?, error: APIError?)
    func didDeleteWedget(result: BaseResponse?, error: APIError?)
}

protocol ServiceManagementInteractorInputProtocol: class {

    var presenter: ServiceManagementInteractorOutputProtocol?  { get set }

    /* Presenter -> Interactor */
    func getWidget(type: Int)
    func deleteWedget(listID: [Int])
}

//MARK: View -
protocol ServiceManagementViewProtocol: class {

    var presenter: ServiceManagementPresenterProtocol?  { get set }

    /* Presenter -> ViewController */
    func didGetWidget(result: [WidgetTypeEntity]?, error: APIError?)
    func didDeleteWedget(result: BaseResponse?, error: APIError?)
}
