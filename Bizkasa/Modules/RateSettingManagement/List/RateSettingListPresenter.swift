//
//  RateSettingListPresenter.swift
//  Bizkasa
//
//  Created Tien Dinh on 9/20/20.
//  Copyright Â© 2020 DINH VAN TIEN. All rights reserved.
//
//  Template generated by Tien Dinh
//

import UIKit

class RateSettingListPresenter: RateSettingListPresenterProtocol {
    func deleteConfigPrice(listID: [Int]) {
        interactor?.deleteConfigPrice(listID: listID)
    }
    
    func deleteRoomClass(listID: [Int]) {
        interactor?.deleteRoomClass(listID: listID)
    }
    
    func addRoomClass(param: RateSettingEntity) {
        interactor?.addRoomClass(param: param)
    }
    
    func getRoomClass() {
        interactor?.getRoomClass()
    }
    

    weak private var view: RateSettingListViewProtocol?
    var interactor: RateSettingListInteractorInputProtocol?
    private let router: RateSettingListWireframeProtocol

    init(interface: RateSettingListViewProtocol,
         interactor: RateSettingListInteractorInputProtocol?,
         router: RateSettingListWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

}

extension RateSettingListPresenter: RateSettingListInteractorOutputProtocol {
    func didDeleteConfigPrice(result: BaseResponse?, error: APIError?) {
        view?.didDeleteConfigPrice(result: result, error: error)
    }
    
    func didDeleteRoomClass(result: BaseResponse?, error: APIError?) {
        view?.didDeleteRoomClass(result: result, error: error)
    }
    
    func didAddRoomClass(result: [RateSettingEntity]?, error: APIError?) {
        view?.didAddRoomClass(result: result, error: error)
    }
    
    func didGetRoomClass(result: [RateSettingEntity]?, error: APIError?) {
        view?.didGetRoomClass(result: result, error: error)
    }
    
	
}
