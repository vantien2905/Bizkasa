//
//  ListCustomerViewController.swift
//  Bizkasa
//
//  Created DINH VAN TIEN on 2/26/20.
//  Copyright © 2020 DINH VAN TIEN. All rights reserved.
//
//  Template generated by Tien Dinh
//

import UIKit

class ListCustomerViewController: HomeBaseViewController {

    @IBOutlet weak var tbCustomer: UITableView!

	var presenter: ListCustomerPresenterProtocol?

    var listCustomer: [CustomerEntity] = [] {
        didSet {
            self.tbCustomer.reloadData()
        }
    }

	override func viewDidLoad() {
        super.viewDidLoad()
        configureTableView()
        presenter?.getListCustomerCheckIn()

        NotificationCenter.default.addObserver(forName: .refreshReceptionist, object: nil, queue: nil) { (_) in
            self.presenter?.getListCustomerCheckIn()
        }
    }

    deinit {
        NotificationCenter.default.removeObserver(self)
    }

    private func configureTableView() {
        tbCustomer.registerTableCell(ListCustomerCell.self)
        tbCustomer.delegate = self
        tbCustomer.dataSource = self
        tbCustomer.rowHeight = UITableView.automaticDimension
    }

    override func setUpNavigation() {
        setTitleNavigation(title: "Khách đang ở")
    }
}

extension ListCustomerViewController: ListCustomerViewProtocol {
    func didGetListCustomerCheckIn(result: CustomerCheckInEntity?, error: APIError?) {
        if let result = result {
            self.listCustomer = result.data
        } else {
            self.makeToast(message: error?.message?.first ?? "")
        }
    }
}

extension ListCustomerViewController: UITableViewDelegate, UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return listCustomer.count
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueTableCell(ListCustomerCell.self)
        cell.customer = listCustomer[indexPath.row]
        return cell
    }


}
