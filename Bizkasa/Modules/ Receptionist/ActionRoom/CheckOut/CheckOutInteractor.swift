//
//  CheckOutInteractor.swift
//  Bizkasa
//
//  Created DINH VAN TIEN on 3/21/20.
//  Copyright Â© 2020 DINH VAN TIEN. All rights reserved.
//
//  Template generated by Tien Dinh
//

import UIKit

class CheckOutInteractor: CheckOutInteractorInputProtocol {
    func deleteOrderDetail(param: SubFeeDetailEntity) {
        service.deleteOrderDetail(param: param, success: { (result) in
            self.presenter?.didDeleteOrderDetail(result: result, error: nil)
        }) { (error) in
            self.presenter?.didDeleteOrderDetail(result: nil, error: error)
        }
    }

    func addOrderDetail(param: SubFeeDetailEntity) {
        service.addOrderDetail(param: param, success: { (result) in
            self.presenter?.didAddOrderDetail(result: result, error: nil)
        }) { (error) in
            self.presenter?.didAddOrderDetail(result: nil, error: error)
        }
    }

    let service = Provider.shared.receptionistAPIService

    func getOrderForCheckOut(orderId: Int, mode: Int) {
        service.getOrderForCheckOut(orderId: orderId, mode: mode, success: { (result) in
            self.presenter?.didGetOrderForCheckOut(result: result, error: nil)
        }) { (error) in
            self.presenter?.didGetOrderForCheckOut(result: nil, error: error)
        }
    }


    weak var presenter: CheckOutInteractorOutputProtocol?
}
