//
//  CheckOutPresenter.swift
//  Bizkasa
//
//  Created DINH VAN TIEN on 3/21/20.
//  Copyright Â© 2020 DINH VAN TIEN. All rights reserved.
//
//  Template generated by Tien Dinh
//

import UIKit

class CheckOutPresenter: CheckOutPresenterProtocol {
    func deleteOrderDetail(param: SubFeeDetailEntity) {
        interactor?.deleteOrderDetail(param: param)
    }

    func addOrderDetail(param: SubFeeDetailEntity) {
        interactor?.addOrderDetail(param: param)
    }

    func getOrderForCheckOut(orderId: Int, mode: Int) {
        interactor?.getOrderForCheckOut(orderId: orderId, mode: mode)
    }


    weak private var view: CheckOutViewProtocol?
    var interactor: CheckOutInteractorInputProtocol?
    private let router: CheckOutWireframeProtocol

    init(interface: CheckOutViewProtocol, interactor: CheckOutInteractorInputProtocol?, router: CheckOutWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

}

extension CheckOutPresenter: CheckOutInteractorOutputProtocol {
    func didDeleteOrderDetail(result: BaseResponse?, error: APIError?) {
        view?.didDeleteOrderDetail(result: result, error: error)
    }

    func didAddOrderDetail(result: BaseResponse?, error: APIError?) {
        view?.didAddOrderDetail(result: result, error: error)
    }

    func didGetOrderForCheckOut(result: OrderInfoEntity?, error: APIError?) {
        view?.didGetOrderForCheckOut(result: result, error: error)
    }

	
}
