//
//  SignUpPresenter.swift
//  Bizkasa
//
//  Created DINH VAN TIEN on 4/30/20.
//  Copyright Â© 2020 DINH VAN TIEN. All rights reserved.
//
//  Template generated by Tien Dinh
//

import UIKit

class SignUpPresenter: SignUpPresenterProtocol {

    func register(param: RegisterParam) {
        interactor?.register(param: param)
    }

    func completedRegiser(param: CompleteRegisterParam) {
        interactor?.completedRegiser(param: param)
    }


    weak private var view: SignUpViewProtocol?
    var interactor: SignUpInteractorInputProtocol?
    private let router: SignUpWireframeProtocol

    init(interface: SignUpViewProtocol, interactor: SignUpInteractorInputProtocol?, router: SignUpWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

}

extension SignUpPresenter: SignUpInteractorOutputProtocol {
    func didRegister(result: UserEntity?, error: APIError?) {
        view?.didRegister(result: result, error: error)
    }

    func didCompletedRegiser(result: UserEntity?, error: APIError?) {
        view?.didCompletedRegiser(result: result, error: error)
    }

	
}
