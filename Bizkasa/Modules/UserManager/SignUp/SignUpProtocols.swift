//
//  SignUpProtocols.swift
//  Bizkasa
//
//  Created DINH VAN TIEN on 4/30/20.
//  Copyright Â© 2020 DINH VAN TIEN. All rights reserved.
//
//  Template generated by Tien Dinh

import Foundation

//MARK: Wireframe -
protocol SignUpWireframeProtocol: class {

}
//MARK: Presenter -
protocol SignUpPresenterProtocol: class {

    var interactor: SignUpInteractorInputProtocol? { get set }

    func register(param: RegisterParam)
    func completedRegiser(param: CompleteRegisterParam)
}

//MARK: Interactor -
protocol SignUpInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func didRegister(result: UserEntity?, error: APIError?)
    func didCompletedRegiser(result: UserEntity?, error: APIError?)
}

protocol SignUpInteractorInputProtocol: class {

    var presenter: SignUpInteractorOutputProtocol?  { get set }

    /* Presenter -> Interactor */
    func register(param: RegisterParam)
    func completedRegiser(param: CompleteRegisterParam)
}

//MARK: View -
protocol SignUpViewProtocol: class {

    var presenter: SignUpPresenterProtocol?  { get set }

    /* Presenter -> ViewController */
    func didRegister(result: UserEntity?, error: APIError?)
    func didCompletedRegiser(result: UserEntity?, error: APIError?)
}
